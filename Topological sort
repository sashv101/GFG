class Solution
{
    static void dfs(int ele,boolean[] vis, ArrayList<ArrayList<Integer>> adj, Stack stk){
        vis[ele]=true;
        for(int i : adj.get(ele)){
            if(!vis[i]){
                dfs(i,vis,adj,stk);
            }
        }
        stk.push(ele);
    }
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        boolean[] vis=new boolean[V];
        Stack<Integer> stk=new Stack<Integer>();
        
        for(int i=0;i<V;i++){
            if(!vis[i]){
                dfs(i,vis,adj,stk);
            }
        }
        int[] ans=new int[V];
        for(int i=0;i<V;i++){
            ans[i]=stk.pop();
        }
        
        return ans;
        }
}
